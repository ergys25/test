version: '3.8'

services:
  orchestrator:
    build: .
    ports:
      - "5090:5090"
    environment:
      - NODE_ENV=production
      - MEMORY_CACHE_TTL=86400
      - HTTP_PORT=5090
      - SERVICE_ROLE=orchestrator
      - JOB_TIMEOUT=15000
      - MAX_CONCURRENT_REQUESTS=50
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - mt-network

  scraper:
    build: .
    deploy:
      replicas: 15
    environment:
      - NODE_ENV=production
      - SERVICE_ROLE=scraper
      - REDIS_HOST=redis
      - SCRAPE_TIMEOUT=15000
      - MAX_CONCURRENT_JOBS=10
      - PAGE_REUSE_COUNT=20
      - MEMORY_LIMIT_MB=800
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - mt-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lru
    networks:
      - mt-network

networks:
  mt-network:
    driver: bridge

volumes:
  redis-data:
